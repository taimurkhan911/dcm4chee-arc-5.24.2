/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.71
 * Generated at: 2022-01-11 08:45:26 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class logout_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!--\n");
      out.write("/* ***** BEGIN LICENSE BLOCK *****\n");
      out.write("* Version: MPL 1.1/GPL 2.0/LGPL 2.1\n");
      out.write("*\n");
      out.write("* The contents of this file are subject to the Mozilla Public License Version\n");
      out.write("* 1.1 (the \"License\"); you may not use this file except in compliance with\n");
      out.write("* the License. You may obtain a copy of the License at\n");
      out.write("* http://www.mozilla.org/MPL/\n");
      out.write("*\n");
      out.write("* Software distributed under the License is distributed on an \"AS IS\" basis,\n");
      out.write("* WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\n");
      out.write("* for the specific language governing rights and limitations under the\n");
      out.write("* License.\n");
      out.write("*\n");
      out.write("* The Original Code is part of Oviyam, an web viewer for DICOM(TM) images\n");
      out.write("* hosted at http://skshospital.net/pacs/webviewer/oviyam_0.6-src.zip\n");
      out.write("*\n");
      out.write("* The Initial Developer of the Original Code is\n");
      out.write("* Raster Images\n");
      out.write("* Portions created by the Initial Developer are Copyright (C) 2014\n");
      out.write("* the Initial Developer. All Rights Reserved.\n");
      out.write("*\n");
      out.write("* Contributor(s):\n");
      out.write("* Babu Hussain A\n");
      out.write("* Devishree V\n");
      out.write("* Meer Asgar Hussain B\n");
      out.write("* Prakash J\n");
      out.write("* Suresh V\n");
      out.write("*\n");
      out.write("* Alternatively, the contents of this file may be used under the terms of\n");
      out.write("* either the GNU General Public License Version 2 or later (the \"GPL\"), or\n");
      out.write("* the GNU Lesser General Public License Version 2.1 or later (the \"LGPL\"),\n");
      out.write("* in which case the provisions of the GPL or the LGPL are applicable instead\n");
      out.write("* of those above. If you wish to allow use of your version of this file only\n");
      out.write("* under the terms of either the GPL or the LGPL, and not to allow others to\n");
      out.write("* use your version of this file under the terms of the MPL, indicate your\n");
      out.write("* decision by deleting the provisions above and replace them with the notice\n");
      out.write("* and other provisions required by the GPL or the LGPL. If you do not delete\n");
      out.write("* the provisions above, a recipient may use your version of this file under\n");
      out.write("* the terms of any one of the MPL, the GPL or the LGPL.\n");
      out.write("*\n");
      out.write("* ***** END LICENSE BLOCK ***** */\n");
      out.write("-->\n");
      out.write("\n");
 
// 	String url = "." + "?q=" + session.getAttribute("q");
// 	session.invalidate();
// 	response.sendRedirect(url);
	
 session.invalidate();
	response.sendRedirect(".");

    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
